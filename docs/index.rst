.. Generic Tutorials documentation master file, created by
   sphinx-quickstart on Thu May  7 21:36:49 2020.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

##########
Αρχή
##########

.. toctree::
   :maxdepth: 2
   :caption: Πεδία:
   :hidden:

   langs
   utils
   guides
   ides
   howto
   source/gloss/terms

Αυτό το site γράφτηκε για να παρουσιάσει :term:`tutorials<Tutorial>`

* Πρώτα από όλα αποφάσισε σε ποιο φάκελο θα δημιουργήσεις το project. Δώσε σε αυτό τον φάκελο ένα χαρακτηριστικό όνομα (κατά προτίμηση μικρό σε μέγεθος) που να υποδηλώνει τι είδους project περιέχει. Για παράδειγμα αυτό το project έγινε για τη δημιουργία οδηγών. Το δημιούργησα μέσα σε ένα φάκελο που ονόμασα `tutorials`.

-----

This is a typical paragraph.  An indented literal block follows.

::

    for a in [5,4,3,2,1]:   # this is program code, shown as-is
        print a
    print "it's..."
    # a literal block continues until the indentation ends

This text has returned to the indentation of the first paragraph,
is outside of the literal block, and is therefore treated as an
ordinary paragraph.

Μπορείς να δημιουργήσεις τέτοιους φακέλους με διάφορους τρόπους. Μέσα από cmd πήγαινε με cd στο μέρος που θέλεις να δημιουργήσεις το φάκελο και στη συνέχεια `mkdir <dir name>`, dir name το όνομα που θέλεις. Δες και τον :doc:`οδηγό για Python <source/python/py-start>`



* emphasis
   * write `*text*` or `:emphasis:`text`` to get *text*
* literal
   * ``text`` or :literal:`text`



* Πριν καν ξεκινήσεις να προσθέτεις περιεχόμενο στο φάκελο, δημιούργησε ένα virtual environment. Αυτό θα λύσει πολλά πιθανά μελλοντικά προβλήματα. Μερικοί οδηγοί για τη δημιουργία virtual environments είναι οι παρακάτω:

    * https://hackernoon.com/reaching-python-development-nirvana-bb5692adf30c
    * https://dev.to/writingcode/the-python-virtual-environment-with-pyenv-pipenv-3mlo
    * https://gioele.io/pyenv-pipenv
    * https://medium.com/@sairamkrish/python-combining-the-power-of-pyenv-and-pipenv-b73fdfc325df
    * https://realpython.com/intro-to-pyenv/

Εδώ θα δούμε πως με το πρόγραμμα `pipenv`. Κάνε τα εξής:

    * https://sphinx-tutorial.readthedocs.io/start/


* You know you are inside a virtualenv when there are parenthesis next to your bash prompt.

* Don't ever run pipenv commands directly from your home directory! This could cause creating a virtualenv that is associated with your home directory, which is very confusing. Instead, you should only run them within your project directories, e.g., next to the README.md if you have a GitHub cloned repo, or next to the manage.py if you are using Django or another Python web framework.

* Closing a terminal will "exit" the virtualenv. This also means if you get your bash terminal in some weird state and it's not letting you enter (or exit the virtualenv with deactivate), the most sure-proof way of "getting out" is simply closing your terminal window and starting a new window!


Πολύ καλό για παραγωγή τυχαίων (fake) δεδομένων. Τεκμηρίωση στο https://github.com/joke2k/faker


## Terminal, Console, Command line, Shell {#sec:TerminalConsoleShell}

Στα πρώτα χρόνια της διάδοσής τους, οι υπολογιστές δεν είχαν τη σημερινή τους μορφή και πολύ περισσότερο δεν υπήρχε η έννοια του "προσωπικού υπολογιστή" (personal computer, είναι αυτό που αποκαλείτε "ο υπολογιστής μου"). Οι πρώτοι υπολογιστές είχαν πολύ μεγάλο μέγεθος (καταλάμβαναν ακόμη και ορόφους σε κτήρια) και ήταν εγκατεστημένοι για χρήση είτε σε εταιρικούς είτε σε κυβερνητικούς είτε σε ακαδημαικούς χώρους. Οι χρήστες είχαν στη διάθεσή τους για να εργαστούν, όχι έναν υπολογιστή αλλά μία οθόνη με ενσαματωμένο πλητκτρολόγιο που ήταν συνδεδεμένη με τον κεντρικό υπολογιστή, όπως στην αριστερή φώτο της Εικόνας \@ref(fig:earlyComputer)

Λάβετε υπόψη σαν ότι αυτό που βλέπετε στην εικόνα ήταν όλο! Ο χρήστης δεν είχε στη διάθεσή του ούτε ποντίκι (εμφανίστηκε πολύ μετά), όυτε κάρτες ή δίσκους μνήμης, τίποτα, μόνο μία οθόνη με πληκτρολόγιο. Αυτό που βλέπεται στην εικόνα λεγόταν "**Terminal**" (τερματικό).

Κάθε terminal ήταν συνδεδεμένο με τον κεντρικό υπολογιστή μέσω καλωδιώσεων. Όλα τα καλώδια από τα τερματικά κατέληγαν σε μία ειδική επιφάνεια και από εκεί οδηγούνταν στον κεντρικό υπολογιστή. Στη συγκεκριμένη επιφάνεια, που λεγόταν "**Console**" (κονσόλα) κατέληγαν όμως και καλωδιώσεις από άλλο ηλεκτρονικό εξοπλισμό (όπως εκτυπωτές, μνήμες κ.λπ.) ώστε αυτός να διαμοιράζεται στους χρήστες. Η κονσόλα στους πρώιμους υπολογιστές έμοιαζε όπως στη δεξιά φωτό Εικόνας \@ref(fig:earlyComputer).

Με τη σταδιακή εξέλιξη των υπολογιστών οι κονσόλες ενσωματώθηκαν μέσα στα τερματικά (ή αν θέλετε το αντίθετο). Με απλά λόγια αυτό σημαίνει ότι το κάθε τερματικό, σταδιακά μπορούσε να επικοινωνήσει απευθείας, εκτός από τον ΚΥ και με τον περιφεριακό εξοπλισμό. Αυτός ήταν ο λόγος που οι έννοιες *teminal* και *cosnole* σταδιακά έγιναν συνώνυμες. Ακόμη και σήμερα οι γνωστές παιχνιδομηχανές (PS4, Xbox κ.λπ.) ή ακόμη και ο ίδιος ο υπολογιστής μας, θεωρούνται κονσόλες γιατί πάνω σε αυτά συνδέονται περιφεριακά εξαρτήματα για κοινή χρήση.

Επιστρέφοντας ξανά στο terminal, ο χρήστης είχε μπροστά του μία οθόνη (συνήθως με μαύρο φόντο), στην οποία έβλεπε τους χαρακτήρες που πληκτρολογούσε (συνήθως σε άσπρο χρώμα). Αυτό που πληκτρολογούσε ήταν εντολές που μπορούσε να καταλάβει ο κεντρικός υπολογιστής και μόνο αυτές. Με το που πατούσε το πλήκτρο enter (ή return) η εντολή μεταβιβαζόταν στον κεντρικό υπολογιστή, αυτός έκανε τους ανάλογους υπολογισμούς και επέστρεφε τα αποτελέσματα στο terminal του χρήστη (στην οθόνη). Αυτό ήταν το μοναδικό περιβάλλον διεπαφής του χρήστη με τον υπολογιστή, είναι αυτό που μέχρι και σήμερα καλούμε "**Command Line Interface**" (διεπαφή γραμμής εντολών) και για συντομία "**CLI**".

Πως όμως ο ΚΥ (κεντρικός υπολογιστής) ξεχώριζε τους χρήστες (σκεφτείτε ότι στον ΚΥ συνδέονταν ταυτόχρονα πολλοί χρήστες); Αυτό γινόταν με ένα ειδικό πρόγραμμα που είχε στη διάθεσήη του ο κάθε χρήστης, το οποίο έκανε ακριβώς αυτή τη δουλειά, μετάφραζε τις εντολές του χρήστη σε εντολές κατανοητές από τον ΚΥ, τις μετέφερε σε αυτόν, παραλάμβανε τα αποτελέσματα και τα επέστρεφε στο χρήστη. Κάθε φορά που ο χρήστης συνδεόταν στο τερματικό (το άνοιγε), εκκινούσε το συγκεκριμένο πρόγραμμα το οποίο ενημέρωνε τον ΚΥ ότι ο χρήστης (για την ακρίβεια, το συγκεκριμένο τερματικό) ήταν έτοιμο να αποστείλει και να λάβει δεδομένα. Με άλλα λόγια, άνοιγε ένα ξεχωριστό κανάλι επικοινωνίας μεταξύ του συγκεκριμένου τερματικού και του ΚΥ. Το πρόγραμμα αυτό λεγόταν **Shell** (κέλυφος).

Με την εξέλιξη των υπολογιστών όλη αυτή η εικόνα άλλαξε. Εμφανίστηκε το λεγόμενο **GUI** (Graphical User Interface) ή στα ελληνικά *Γραφικό Περιβάλλον Χρήστη*. Τέτοιο περιβάλλον διεπαφής υιοθετούν OS όπως τα Windows και MacOS. Σε GUI περιβάλλον ο χρήστης αλληλεπιδρά με τον υπολογιστή μέσα από παράθυρα και μενού με τη βοήθεια κάποιου "καταδείκτη" (το ποντίκι). Όμως το CLI περιβάλλον δεν εγκαταλήφθηκε. Αντίθετα εξελίχθηκε με πολύ περισσότερες δυνατότητες από αυτές που περιγράψαμε παραπάνω. Ακόμη και σήμερα το λειτουργικό περιβάλλον UNIX (δε θα το περιγράψουμε, μπορείτε να βρείτε πληροφορίες στη Wikipedia: ["Unix"](https://en.wikipedia.org/wiki/Unix)) και οι κλώνοι του (π.χ. Linux), χρησιμοποιούν ευρύτατα το CLI. Οι άνθρωποι που ασχολούνται σοβαρά με τον κόσμο της πληροφορικής δεν μπορούν να φανταστούν άλλο περιβάλλον εργασίας από το συγκεκριμένο. Αν θέλετε να πάρετε τα μέγιστα από ένα υπολογιστικό σύστημα αυτό μόνο το CLI μπορεί να σας το δώσει. Επίσης, όσο και αν ακούγεται παράξενο, το CLI είναι ταχύτερο στην υλοποίηση μίας εργασίας σε σχέση με το GUI, αν τα μάθετε καλά.

Όμως και οι (ιστορικοί) όροι "terminal", "console" και "shell" διατηρήθηκαν επίσης. Ακόμη και σήμερα θα συναντήσετε να αναφέρεται κάποιος σε αυτούς. Πιο συγκεκριμένα στη σημερινή εποχή (και αναφερόμενοι στο λειτουργικό σύστημα Windows):

Terminal
: Είναι ένα παράθυρο μέσα στο γραφικό περιβάλλον, που απεικονίζει και δέχεται μόνο χαρακτήρες  κειμένου. Στο παράθυρο αυτό ένας ειδικός χαρακτήρας που εμφανίζεται σταθερά, ακολουθούμενος από έναν χαρακτήρα που αναβοσβήνει, καλούνται "σημάδι προτροπής" (command prompt) και βρίσκονται εκεί για να θυμίζουν στο χρήστη ότι αναμένουν εντολές από αυτόν. Ένα τέτοιο terminal φαίνεται στη συνέχεια στην Εικόνα \@ref(fig:cli). Αν μεγιστοποιήσετε αυτό το παράθυρο θα πάρετε μία ιδέα του τι έβλεπαν μπροστά τους οι χρήστες στα πρώιμα χρόνια των υπολογιστών. Στο δικό σας υπολογιστή δε θα βλέπετε μπλε φόντο (όπως στην εικόνα) αλλά μαύρο. Άρα, με απλά λόγια, terminal είναι ένα παράθυρο μόνο κειμένου, που δεχεται από το χρήστη εντολές και επιστρέφει σε αυτόν (στην ίδια οθόνη) αποτελέσματα. Όπου στο βιβλίο συναντήστε τον όρο terminal να ξέρετε ότι εννούμε ένα περιβάλλον σαν αυτό της εικόνας. θα δούμε πως το εμφανίζουμε, στη συνέχεια.

Console
: Στην πραγματικότητα είτε δεν υπάρχει σήμερα με την ιστορική ερμηνεία του όρου είτε (στον κόσμο των UNIX συστημάτων, όχι στα Windows) έχει πολλές ερμηνείες (π.χ. στα Linux μπορείτε να ενεργοποιήσετε ταυτόχρονα μέχρι και 6 διαφορετικές εικονικές κονσόλες -- virtual console -- και να εργάζεστε ταυτόχρονα σε όλες). Σημειώστε ωστόσο ότι όροι terminal και console χρησιμοποιούνται εναλλάξιμα σήμερα. Θα δείτε πολλές φορές να χρησιμοποιείται ο όρος console εννοώντας ένα παράθυρο terminal και το αντίθετο.

Command Line Interface -- CLI
: Είναι ένα στυλ αλληλεπίδρασης με το λειτουργικό σύστημα δiαφορετικό από το GUI. Για ότι θέλουμε να κάνουμε στον υπολογιστή μας, γράφουμε μία εντολή και πατάμε enter για να εκτελεστεί (και όχι κλικ ή διπλό κλικ σε εικονίδια). Αυτή ήταν και είναι η απλούστερη εξήγηση του όρου. Όταν λέμε λοιπόν γραμμή εντολών, εννοούμε ένα περιβάλλον όπου αλληλεπιδρούμε με τον υπολογιστή μας καθαρά σε λειτουργία κειμένου (text mode). Γενικά μπορεί να συναντήσετε τους παρακάτω όρους που αναφέρονται στο συγκεκριμένο περιβάλλον:

- "**command line interface**" (διεπαφή γραμμής εντολών) ή
- "**command line environment**" (περιβάλλον γραμμής εντολών) ή
- "**command prompt**" (προτροπή εντολής) ή
- "**prompt**" (προτροπή) ή
- "**command line interpreter**" (διερμηνευτής γραμμής εντολών). Ο συγκεκριμένος όρος λανθασμένα αναφέρεται στο περιβάλλον γραμμής εντολών, αφορά στο πρόγραμμα (και όχι στο περιβάλλον) που εκτελεί εντολές και αυτό είναι το shell.

Όλοι αυτοί οι όροι αναφέρονται στο παραπάνω CLI περιβάλλον.

Shell
: Είναι ένα πρόγραμμα που επιτρέπει άλλα προγράμματα να λειτουργούν μέσα από αυτό. Με απλά λόγια κάνει τον ενδιάμεσο μεταξύ του λειτουργικού προγράμματος και του προγράμματος που θέλουμε να τρέξουμε. Υπάρχουν GUI shells (π.χ. στα Windows, ο Windows Explorer) και CLI shells (π.χ. στα Windows το `cmd.exe` ή το PowerShell). Τα shells έχουν εξελιχθεί σε βαθμό που μπορούν να χαρακτηριστούν και σαν γλώσσες προγραμματισμού γιατί μπορούν να εκτελέσουν εκτός από τις εντολές που είναι σχεδιασμένες γι αυτά και όλες τις εντολές που είναι σχεδιασμένες για τα προγράμματα που εκτελούνται μέσα από αυτά. Στα Windows μπορούμε να μπούμε σε CLI μόνο μέσα από ένα shell (π.χ. τα `cmd.exe` ή PowerShell). Πολλές φορές οι όροι *CLI* και *shell* συγχέονται, μην ανησυχείτε γι αυτό δεν είναι πρόβλημα.
